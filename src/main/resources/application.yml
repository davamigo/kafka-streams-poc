spring:
  application:
    name: "kafka-streams-poc"

  data:
    mongodb:
      host: "localhost"
      port: "27017"
      username: "root"
      password: "temporal"
      database: "kafka"
      authentication-database: "admin"

  kafka:
    bootstrap-servers: localhost:9092
    schema-registry-url: http://localhost:8081
    producer:
      acks: "all"
      retries: 3
      linger-ms: 2
    consumer:
      auto-offset-reset: "earliest"
      enable-auto-commit: "false"
    streams:
      threads: 1
    group-ids:
      members-new: "${spring.application.name}.members.new"
      products-new: "${spring.application.name}.products.new"
      commercial-orders-new: "${spring.application.name}.commercial-orders.new"
      purchase-orders-generated: "${spring.application.name}.purchase-orders.generated"
      warehouse-order-lines-failed: "${spring.application.name}.warehouse-order-lines-failed"
    topics:
      members-new: "t.members.new"
      products-new: "t.products.new"
      product-legacy-ids: "t.product-legacy-ids.cache"
      commercial-orders-new: "t.commercial-orders.new"
      commercial-orders-converted: "t.commercial-orders.converted"
      commercial-order-lines-split: "t.commercial-order-lines.split"
      purchase-order-lines-aggregated: "t.purchase-order-lines.aggregated"
      purchase-orders-generated: "t.purchase-orders.generated"
      warehouse-order-lines-generated: "t.warehouse-order-lines.generated"
      warehouse-order-lines-matched: "t.warehouse-order-lines.matched"
      warehouse-order-lines-unmatched: "t.warehouse-order-lines.unmatched"
      warehouse-order-lines-recovered: "t.warehouse-order-lines.recovered"
      warehouse-order-lines-failed: "t.warehouse-order-lines.failed"
      warehouse-order-lines-new: "t.warehouse-order-lines.new"
    stores:
      members: "members.materialized"
      products: "products.materialized"
      warehouse-order-lines-failed: "warehouse-order-lines-failed.materialized"

